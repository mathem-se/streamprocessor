<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The Basics -->

    <groupId>org.streamprocessor</groupId>
    <artifactId>streamer</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>pom</packaging>
    <name>streamer</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <autovalue.version>1.7.4</autovalue.version>
        <autovalue.annotations.version>1.7.4</autovalue.annotations.version>
        <autovalue.service.version>1.0-rc6</autovalue.service.version>
        <checkstyle.version>9.0</checkstyle.version>
        <beam.version>2.43.0</beam.version>
        <beam-vendor-guava.version>0.1</beam-vendor-guava.version>
        <hamcrest.version>2.1</hamcrest.version>
        <guava.version>31.0.1-jre</guava.version>
        <java.version>11</java.version>
        <jib.maven.version>3.3.1</jib.maven.version>
        <junit.version>4.13</junit.version>
        <junit-dep.version>4.10</junit-dep.version>
        <opensensus.version>0.24.0</opensensus.version>
        <surefire.version>2.21.0</surefire.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
        <maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <mockito-core.version>3.0.0</mockito-core.version>
        <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
        <slf4j.version>1.7.36</slf4j.version>
        <mvn-target-dir>${basedir}/target</mvn-target-dir>
        <json.version>20200518</json.version>
        <spotless-maven-plugin.version>2.31.0</spotless-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.google.flogger</groupId>
                <artifactId>flogger-system-backend</artifactId>
                <version>0.7.4</version>
            </dependency>


            <dependency>
                <groupId>com.google.flogger</groupId>
                <artifactId>flogger</artifactId>
                <version>0.7.4</version>
            </dependency>


            <dependency>
                <groupId>com.google.apis</groupId>
                <artifactId>google-api-services-storage</artifactId>
                <version>v1-rev20211018-1.32.1</version>
            </dependency>


            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>1.1.8.4</version>
            </dependency>


            <dependency>
                <groupId>org.threeten</groupId>
                <artifactId>threetenbp</artifactId>
                <version>1.5.2</version>
            </dependency>


            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.9.0</version>
            </dependency>


            <dependency>
                <groupId>io.opencensus</groupId>
                <artifactId>opencensus-api</artifactId>
                <version>0.31.0</version>
            </dependency>


            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.15</version>
            </dependency>


            <dependency>
                <groupId>com.google.auth</groupId>
                <artifactId>google-auth-library-oauth2-http</artifactId>
                <version>1.2.1</version>
            </dependency>


            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>2.11.0</version>
            </dependency>


            <dependency>
                <groupId>com.google.auto.value</groupId>
                <artifactId>auto-value-annotations</artifactId>
                <version>1.8.2</version>
            </dependency>


            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>3.21.3</version>
            </dependency>


            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>31.0.1-jre</version>
            </dependency>

            <dependency>
                <groupId>org.apache.beam</groupId>
                <artifactId>beam-sdks-java-bom</artifactId>
                <version>${beam.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>libraries-bom</artifactId>
                <version>24.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Beam -->
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-core</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-google-cloud-dataflow-java</artifactId>
            <version>${beam.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-extensions-google-cloud-platform-core</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-io-google-cloud-platform</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-direct-java</artifactId>
            <version>${beam.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-vendor-guava-26_0-jre</artifactId>
            <version>${beam-vendor-guava.version}</version>
        </dependency>

        <!-- Test -->
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Misc -->
        <dependency>
            <groupId>io.opencensus</groupId>
            <artifactId>opencensus-api</artifactId>

        </dependency>
        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>${autovalue.service.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value</artifactId>
            <version>${autovalue.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value-annotations</artifactId>

        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>

        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>

        </dependency>
        <dependency>
            <groupId>com.google.auth</groupId>
            <artifactId>google-auth-library-oauth2-http</artifactId>

        </dependency>
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.32.1</version>
        </dependency>
        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-datacatalog</artifactId>
            <version>1.7.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.api/gax -->
        <dependency>
            <groupId>com.google.api</groupId>
            <artifactId>gax</artifactId>
            <version>2.7.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>3.0.5</version>
        </dependency>

    </dependencies>

    <!-- Build Settings -->

    <build>
        <directory>${mvn-target-dir}</directory>

        <extensions>
            <extension>
                <groupId>com.google.cloud.artifactregistry</groupId>
                <artifactId>artifactregistry-maven-wagon</artifactId>
                <version>2.1.0</version>
            </extension>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <!--
                    The jib plugin provides the capability to containerize this
                application based on
                    properties specified in the configuration
                without having to build a Dockerfile manually.
                    Jib also
                integrates with the maven lifecycle and helps push the image to the repository
                specified in the configuration or via the command line.
                https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin
                -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.maven.version}</version>
                    <configuration>
                        <from>
                            <!--
                                The Dataflow Template base image to
                            use. This
                                should not need to change
                            unless we want to use the JDK11
                            -->
                            <image>${base-container-image}:${base-container-image.version}</image>
                        </from>
                        <container>
                            <!--
                                The root directory to use to expand
                            the compiled classes and dependencies in. The
                                Jib
                            plugin  will create the following directories under this root:
                                    -
                            resources: All the files under src/resources will be copied to this
                            folder as-is.
                                    - libs: All dependency
                            jars needed to execute this pipeline will be copied into this
                                        folder.
                            - classes: Compiled pipeline code will be copied into this folder.
                                The
                            libs and classes folders under appRoot should thus be added in the
                            classpath
                                defined in
                            src/resources/command-spec.json.
                            -->
                            <appRoot>${app-root}</appRoot>
                            <!--
                                    INHERIT the base containers
                            entrypoint. Do not override or the Dataflow service
                                    will
                            be unable to launch this template.
                                -->
                            <entrypoint>INHERIT</entrypoint>
                            <environment>
                                <!--
                                    Set an environment variable
                                called DATAFLOW_JAVA_COMMAND_SPEC that points to the
                                java-command-spec.json file inside the container. Note that since
                                the Jib plugin
                                    copies the
                                containers of src/resources/* to appRoot/resources, the value of
                                this
                                    environment variable can be
                                set here.
                                -->
                                <DATAFLOW_JAVA_COMMAND_SPEC>
                                    ${command-spec}
                                </DATAFLOW_JAVA_COMMAND_SPEC>
                            </environment>
                        </container>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <id>bundle-and-repackage</id>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <dependencyReducedPomLocation>
                                    ${mvn-target-dir}/dependency-reduced-pom.xml
                                </dependencyReducedPomLocation>
                                <shadeTestJar>true</shadeTestJar>
                                <artifactSet>
                                    <includes>
                                        <include>*:*</include>
                                    </includes>
                                </artifactSet>
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                                <transformers>
                                    <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                </transformers>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                    <configuration>
                        <cleanupDaemonThreads>false</cleanupDaemonThreads>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.12</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <name>current.year</name>
                            <pattern>yyyy</pattern>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>analyze-dependencies</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <!-- Ignore runtime-only dependencies in analysis -->
                            <ignoreNonCompile>true</ignoreNonCompile>
                            <failOnWarning>false</failOnWarning>
                            <ignoredUsedUndeclaredDependencies>
                                <ignoredUsedUndeclaredDependency>
                                    com.google.api.grpc:proto-google-cloud-dlp-v2
                                </ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>
                                    org.apache.beam:beam-model-pipeline
                                </ignoredUsedUndeclaredDependency>
                            </ignoredUsedUndeclaredDependencies>
                            <ignoredUnusedDeclaredDependencies>
                                <ignoredUnusedDeclaredDependency>
                                    org.slf4j:slf4j-api
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.slf4j:slf4j-simple
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.apache.beam:beam-runners-google-cloud-dataflow-java
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.slf4j:slf4j-simple
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    com.google.code.findbugs:jsr305
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.apache.beam:beam-runners-direct-java
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.threeten:threetenbp
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.apache.beam:beam-sdks-java-core
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    com.google.auto.value:auto-value-annotations
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    joda-time:joda-time
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.apache.beam:beam-vendor-guava-20_0
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>
                                    org.apache.beam:beam-sdks-java-io-google-cloud-platform
                                </ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>11</release>
                    <parameters>true</parameters>
                    <testCompilerArgument>-parameters</testCompilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-and-repackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadeTestJar>true</shadeTestJar>
                            <artifactSet>
                                <includes>
                                    <include>*:*</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <!-- Set up Javadoc configuration for javadoc run via in the Maven
                     build.
                Teleport only uses the plugin to create the individual javadoc
                     attached
                artifacts used for IDEs. The combined javadoc for the
                     website
                is built in the sdks/java/javadoc directory. Rather than
                     duplicate
                a raft of configuration between the ant.xml there and
                     here, we
                leave things simple here. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <windowtitle>Teleport for Java, version ${project.version} API</windowtitle>
                    <doctitle>Teleport for Java, version ${project.version}</doctitle>
                    <use>false</use>
                    <quiet>true</quiet>
                    <notimestamp>true</notimestamp>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <enforceBytecodeVersion>
                                    <!--<maxJdkVersion>1.9</maxJdkVersion>-->
                                    <maxJdkVersion>11</maxJdkVersion>
                                    <excludes>
                                        <!--
                                          Supplied by
                                        the user JDK and compiled with matching
                                          version.
                                        Is not shaded, so safe to ignore.
                                        -->
                                        <exclude>jdk.tools:jdk.tools</exclude>
                                    </excludes>
                                </enforceBytecodeVersion>
                                <requireJavaVersion>
                                    <version>[1.7,)</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <!-- Keep aligned with prerequisite section below. -->
                                    <version>[3.2,)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>com.google.guava:guava-jdk5</exclude>
                                        <exclude>com.google.protobuf:protobuf-lite</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <!-- Exclude Cloud Spanner integration tests that require a GCP project to run.
                    They can be run run manually using
                  TODO: Add support for
                    emulator to run integration tests.
                  'mvn
                    -Dexcluded.spanner.tests="" -Dtest=<testname> test' -->
                    <systemProperties>
                        <property>
                            <name>nashorn.args</name>
                            <value>--no-deprecation-warning</value>
                        </property>
                    </systemProperties>
                    <excludedGroups>${excluded.spanner.tests}</excludedGroups>
                </configuration>
            </plugin>

            <!-- Keep this equivalent with ../pom.xml. Unfortunately, we need to duplicate the
            plugin until we can fix errors introduced by adding v2 as a child module of the root
            teleport module. -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <configuration>
                <formats>
                <!-- you can define as many formats as you want, each is independent -->
                <format>
                    <!-- define the files to apply to -->
                    <includes>
                    <include>*.md</include>
                    <include>.gitignore</include>
                    </includes>
                    <!-- define the steps to apply to those files -->
                    <trimTrailingWhitespace/>
                    <endWithNewline/>
                    <indent>
                    <tabs>true</tabs>
                    <spacesPerTab>4</spacesPerTab>
                    </indent>
                </format>
                </formats>
                    <!-- define a language-specific format -->
                    <java>
                    <!-- no need to specify files, inferred automatically, but you can if you want -->

                    <!-- apply a specific flavor of google-java-format and reflow long strings -->
                    <googleJavaFormat>
                        <version>1.15.0</version>
                        <style>AOSP</style>
                        <reflowLongStrings>true</reflowLongStrings>
                    </googleJavaFormat>

                    </java>
                </configuration>
            </plugin>
        </plugins>


    </build>


    <!-- More Project Information -->


    <!-- Environment Settings -->

    <repositories>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <modules>
        <module>core</module>
    </modules>

</project>